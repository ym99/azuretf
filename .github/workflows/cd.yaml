name: cd

on:
  push:
    branches:
      - name
    paths:
      - 'src/terraform/**'
      - '.github/workflows/**'

env:
  WORKING_DIRECTORY: "src/terraform"
  APPLICATION_NAME: "aztf"
  ENVIRONMENT_NAME: "dev"

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3
        with:
          terraform_version: 1.5.5
          terraform_wrap: false

      - name: Terraform Apply
        env:
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          BACKEND_RESTORE_GROUP: ${{ vars.BACKEND_RESTORE_GROUP }}
          BACKEND_STORAGE_ACCOUNT_NAME: ${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}
          BACKEND_STORAGE_CONTAINER_NAME: ${{ vars.BACKEND_STORAGE_CONTAINER_NAME }}
          TF_VAR_application_name: ${{ env.APPLICATION_NAME }}
          TF_VAR_environment_name: ${{ env.ENVIRONMENT_NAME }}
          TF_BACKEND_KEY: ${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT_NAME }}
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESTORE_GROUP }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_CONTAINER_NAME }}" \
          -backend-config="key=${{ env.TF_BACKEND_KEY }}.tfstate"

          terraform apply -auto-approve
